@using WebRuou.Models
@using PagedList.Mvc
@model PagedList.PagedList<Order>

@{
    ViewBag.Title = "Quản lý đơn hàng";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="page-inner">
        <div class="content-wrapper">
            <div class="page-header">
                <h3 class="page-title">Quản lý đơn hàng</h3>
            </div>

            <!-- Bộ lọc tìm kiếm -->
            <form method="get" action="@Url.Action("Index")">
                <div class="row">
                    <div class="col-md-4">
                        <input type="text" name="searchString" value="@Request.QueryString["searchString"]" class="form-control" placeholder="Tìm kiếm theo mã hoặc tên khách hàng">
                    </div>
                    <div class="col-md-3">
                        @Html.DropDownList("status", ViewData["StatusList"] as SelectList, new { @class = "form-control" })
                    </div>
                    <div class="col-md-2">
                        <button type="submit" class="btn btn-primary">Lọc</button>
                        <a href="@Url.Action("Index")" class="btn btn-secondary">Reset</a>
                    </div>
                </div>
            </form>


            <!-- Danh sách đơn hàng -->
            <div class="card-body" style="margin-top: 20px;">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>STT</th>
                            <th>Mã đơn</th>
                            <th>Khách hàng</th>
                            <th>Tổng tiền</th>
                            <th>Trạng thái</th>
                            <th>Ngày đặt</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            var i = 1;
                            foreach (var order in Model)
                            {
                                <tr>
                                    <td>@i</td>
                                    <td>@order.OrderID</td>
                                    <td>@(order.User != null ? order.User.FullName : "Không xác định")</td>
                                    <td>@String.Format("{0:N0}", order.TotalAmount)đ</td>
                                    <td>
                                        <span>@order.Status</span>
                                    </td>
                                    <td>@(order.OrderDate?.ToString("dd/MM/yyyy"))</td>
                                    <td>
                                        <a href="@Url.Action("Details", "Order", new { id = order.OrderID })" class="btn btn-primary">Xem</a>
                                        <a href="@Url.Action("Edit", "Order", new { id = order.OrderID })" class="btn btn-warning">Chỉnh sửa</a>
                                    </td>
                                </tr>
                                i++;
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="7" class="text-center">Không có đơn hàng nào</td>
                            </tr>
                        }
                    </tbody>
                </table>

                <!-- Phân trang -->
                <div>
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page, searchString = ViewBag.SearchString, status = ViewBag.SelectedStatus }))
                </div>
            </div>
        </div>
    </div>
</div>

@helper GetStatusClass(string status)
{
    switch (status)
    {
        case "Chờ xác nhận":
            @:secondary
            break;
        case "Đang giao":
            @:info
            break;
        case "Hoàn thành":
            @:success
            break;
        case "Đã hủy":
            @:danger
            break;
        default:
            @:dark
            break;
    }
}
